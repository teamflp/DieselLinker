name: Rust CI

on:
  push:
    branches: [ "main", "development" ]
  pull_request:
    branches: [ "main", "development" ]

env:
  CARGO_TERM_COLOR: always
  DATABASE_URL: postgres://postgres:postgres@127.0.0.1/diesel_linker_test
  MYSQL_URL: mysql://root:password@127.0.0.1:3306/diesel_linker_test

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: diesel_linker_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: diesel_linker_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping -h localhost"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libpq-dev libmysqlclient-dev

    - name: Wait for MySQL to be healthy
      run: sleep 15 # Wait for mysql to be ready. A better solution would be to use a script that polls the db.

    - name: Run tests
      run: cargo test -- --test-threads=1
